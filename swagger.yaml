swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /accounts:
      get:
        security:
          - Bearer: []
        tags:
          - account Module
        summary: User accounts API
        description: API  returns user accounts
        produces:
          - application/json
        responses:
          '200':
            description:  API Sucessfully  returns an array with different informations of  user accounts
            schema:
              $ref: '#/definitions/Account'
          '400':  
            description: Invalid Fields
          '500':
            description: Internal Server Error

  /transactions/account/{accountId}/current-month:
        get:
          security:
            - Bearer: []
          tags:
            - transaction Module
          summary:  Current month account transactions API
          description: API  returns transaction details for an user account for the current month
          parameters:
            - in: path
              name: accountId
              type: integer
              required: true
              description: The ID of the account for which to retrieve transactions
          produces:
            - application/json
          responses:
            '200':
              description:  API  successfully returns an array with different transactions for an user account
              schema:
                type: array  # Ajout de cette ligne pour spécifier que la réponse est un tableau
                items:       # Chaque élément du tableau est une transaction
                  $ref: '#/definitions/Transaction'
            '400':  
              description: Invalid Fields
            '500':
              description: Internal Server Error

  /transaction/{transactionId}:
        get:
          security:
            - Bearer: []
          tags:
            - transaction Module
          summary:  Transaction Details API
          description: API  returns transaction informations
          parameters:  # Ajout de cette section pour définir le paramètre path
            - in: path
              name: transactionId
              type: integer
              required: true
              description: The ID of the transaction to retrieve
          produces:
            - application/json
          responses:
            '200':
              description:  API Successfully returns transaction informations
              schema:
                $ref: '#/definitions/Transaction'
            '404':  
              description: Transaction not found
            '500':
              description: Internal Server Error

        put:
          security:
            - Bearer: []
          tags:
            - transaction Module
          summary: Modify informations for a transaction
          description: API to modify the category and note  of a transaction
          parameters:
            - in: path
              name: transactionId
              type: integer
              required: true
              description: transaction Id
            - in: body
              name: body
              description: Payload for modify transaction
              required: true
              schema:
                $ref: '#/definitions/TransactionEdit'
          responses:
            '200':
              description: API Successfully transaction updated successfully
              schema:
                $ref: '#/definitions/ApiResponse'
            '400':
              description: Invalid fields entered
            '404':
              description: Transaction not found
            '500':
              description: Internal Server Error



securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
        
  Account:
    type: array
    items:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Argent Bank Checking (x8349)
        amount:
          type: number
          example: 2082.79
        balance:
          type: string
          example: current

  Transaction:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 945
      accountId:
        type: integer
        format: int64
        example: 1
      date:
        format: date
        type: string
        example: 2020-02-27
      amount:
        type: number
        example: 8.95
      description:
        type: string
        example: Golden Sun Bakery
      details:
        type: object
        properties:
          transactionType:
            type: string
            example: Electronic
          category:
            type: object  
            properties:
              id:
                type: integer
                format: int64
                example: 1
              name:
                type: string
                example: Food
          note:
            type: string
            example: Payment for fruits and vegetables
  
  TransactionEdit:
    type: object
    properties:
      categoryId:
        type: integer
        format: int64
        example: 1
      category:
        type: string
        example: Food
      note:
        type: string
        example: Payment for groceries
